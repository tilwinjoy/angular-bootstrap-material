angular.module("angularBootstrapMaterial",["ngMessages"]),angular.module("angularBootstrapMaterial").run(["$templateCache",function(e){e.put("templates/checkbox.html",'<label>\n    <abm-transclude-slot-checkbox></abm-transclude-slot-checkbox>\n    <span class="checkbox-material">\n        <span class="check"></span>\n    </span> {{label}}\n</label>'),e.put("templates/form-group.html",'<div class="form-group" ng-class="{{classList}}" ng-form="fg_{{$id}}">\n    <abm-transclude-slot></abm-transclude-slot>\n    <div ng-show="showErrors" ng-messages="this[\'fg_\'+$id].$error" ng-messages-multiple>\n        <div ng-if="errorMessagesInclude" ng-messages-include="{{errorMessagesInclude}}"></div>\n        <div ng-repeat="(key,value) in errorMessageMap">\n            <!-- use ng-message-exp for a message whose key is given by an expression -->\n            <div ng-message-exp="key" class="help-block">{{value}}</div>\n        </div>\n    </div>\n</div>'),e.put("templates/input.html",'<input id="input_{{$id}}" name="input_{{$id}}" class="form-control">'),e.put("templates/label.html",'<label for="{{\'input_\'+ formControl.$id}}" class="control-label">{{label}}</label>'),e.put("templates/radio.html",'<label>\n    <abm-transclude-slot-radio></abm-transclude-slot-radio>\n    <span class="circle"></span><span class="check"></span> {{label}}\n</label>'),e.put("templates/toggle.html",'<label>\n    {{label}}\n    <abm-transclude-slot-toggle></abm-transclude-slot-toggle>\n    <span class="toggle"></span>\n</label>')}]),angular.module("angularBootstrapMaterial").directive("abmCheckbox",function(e){return{scope:{label:"@"},transclude:!0,templateUrl:"templates/checkbox.html",link:function(e,t,a,r,l){l(function(e,a){t.find("abm-transclude-slot-checkbox").replaceWith(e)},null)}}}),angular.module("angularBootstrapMaterial").directive("abmLabel",function(e){return{require:"^abmFormGroup",scope:{type:"="},link:function(e,t,a,r){if(!r)return!1;var l="label-"+(a.type||"static");t.hasClass("control-label")||t.addClass("control-label"),r.addClass(l)}}}),angular.module("angularBootstrapMaterial").directive("abmFormControl",["isChar",function(e){return{scope:{},require:["ngModel","^abmFormGroup"],compile:function(){return function(t,a,r,l){var n=l[0],o=l[1];a.hasClass("form-control")||a.addClass("form-control"),a.attr("id")||a.attr("id","form-control-"+t.$id),o.registerControl(t),a.on("input paste",function(t){e(t)&&o.toggleEmpty(!0)}).on("focus",function(){o.toggleFocus(!0)}).on("blur",function(){o.toggleFocus(!1)}),t.$watch(function(){return n.$invalid},o.toggleError),t.$watch(r.ngModel,o.toggleEmpty)}}}}]),angular.module("angularBootstrapMaterial").directive("abmFormGroup",function(e){return{scope:{classList:"=",label:"@",placeholder:"@",errorMessages:"=",errorMessagesInclude:"@"},replace:!0,transclude:!0,templateUrl:"templates/form-group.html",controller:function(t,a){if(t.errorMessageMap={},t.showErrors=e.getErrorState()&&t.errorMessages!==!1,t.showErrors){var r=e.getErrors()||{};t.errorMessages instanceof Object?angular.extend(t.errorMessageMap,r,t.errorMessages):angular.extend(t.errorMessageMap,r)}this.toggleFocus=function(e){a.toggleClass("is-focused",e)},this.toggleEmpty=function(e){a.toggleClass("is-empty",e)},this.toggleError=function(e){a.toggleClass("has-error",e)},this.registerControl=function(e){t.formControl=e},this.addClass=function(e){a.addClass(e)}},link:{pre:function(e,t,a,r,l){},post:function(e,t,a,r,l){l(function(e,a){var r=e.find("label"),l=e.find(".form-control");r.attr("for","form-control-"+a.$id),l.attr("id","form-control-"+a.$id),t.find("abm-transclude-slot").replaceWith(e)},null)}}}}),angular.module("angularBootstrapMaterial").directive("abmRadio",function(e){return{scope:{label:"@"},transclude:!0,templateUrl:"templates/radio.html",link:function(e,t,a,r,l){l(function(e,a){t.find("abm-transclude-slot-radio").replaceWith(e)},null)}}}),angular.module("angularBootstrapMaterial").directive("abmToggle",function(e){return{scope:{label:"@"},transclude:!0,templateUrl:"templates/toggle.html",link:function(e,t,a,r,l){l(function(e,a){t.find("abm-transclude-slot-toggle").replaceWith(e)},null)}}}),angular.module("angularBootstrapMaterial").factory("abmConfig",function(){var e=!0,t={};return{toggleErrorState:function(){e=!e},getErrorState:function(){return e},getErrors:function(e){return t},setErrors:function(e){e&&e instanceof Object&&angular.extend(t,e)}}}),angular.module("angularBootstrapMaterial").factory("isChar",function(){return function(e){return"undefined"==typeof e.which?!0:"number"==typeof e.which&&e.which>0?!e.ctrlKey&&!e.metaKey&&!e.altKey&&8!=e.which&&9!=e.which&&13!=e.which&&16!=e.which&&17!=e.which&&20!=e.which&&27!=e.which:!1}});